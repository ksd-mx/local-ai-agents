services:
  n8n:
    container_name: n8n
    image: docker.n8n.io/n8nio/n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=n8n-postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=${N8N_POSTGRES_PASSWORD:-n8npass}
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_PROTOCOL=${N8N_PROTOCOL:-http}
      - N8N_PORT=5678
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-32characterslongencryptionkeysecret}
      - N8N_SECURE_COOKIE=${N8N_SECURE_COOKIE:-false}
      - WEBHOOK_URL=${WEBHOOK_URL:-http://localhost:5678/}
      - NODE_ENV=production
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=false
    depends_on:
      - n8n-postgres
      - n8n-redis
    networks:
      - n8n_default
      - supabase_default

  n8n-postgres:
    container_name: n8n-postgres
    image: postgres:14-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=${N8N_POSTGRES_PASSWORD:-n8npass}
      - POSTGRES_DB=n8n
    volumes:
      - ./n8n-volumes/postgres:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U n8n
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - n8n_default

  n8n-redis:
    container_name: n8n-redis
    image: redis:alpine
    restart: unless-stopped
    command: --requirepass ${REDIS_PASSWORD:-redis}
    volumes:
      - ./n8n-volumes/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - n8n_default

networks:
  n8n_default:
  supabase_default:
    external: true